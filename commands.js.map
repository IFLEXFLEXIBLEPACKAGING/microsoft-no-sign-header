{"version":3,"file":"commands.js","mappings":"AAAAA,OAAOC,QAAQ,WACb,GAuCFD,OAAOE,QAAQC,UAAU,mBAhCzB,SAA0BC,GAOxBJ,OAAOK,QAAQC,QAAQC,KAAKC,gBAAgBC,SALxB,CAClB,cAAe,QAIiD,SAACC,GACjE,GAAIA,EAAYC,SAAWX,OAAOY,kBAAkBC,UAAW,CAC7DC,QAAQC,IAAI,iDAGZ,IAAMC,EAAe,CACnBC,KAAMjB,OAAOkB,aAAaC,4BAA4BC,qBACtDC,QAAS,6BACTC,KAAM,aACNC,YAAY,GAEdvB,OAAOK,QAAQC,QAAQC,KAAKiB,qBAAqBC,aAC/C,uBACAT,EAEJ,MACEF,QAAQY,MAAM,gCAAkCC,KAAKC,UAAUlB,EAAYgB,QAI7EtB,EAAMyB,WACR,EACF","sources":["webpack://office-addin-taskpane-js/./src/commands/commands.js"],"sourcesContent":["Office.onReady(() => {\n  // Office is ready\n});\n\n/**\n * Añade la cabecera 'X-Skip-Sign: true' al correo electrónico actual.\n * @param {Office.AddinCommands.Event} event El objeto de evento de Outlook.\n */\nfunction addCustomHeaders(event) {\n  // Define el único encabezado que necesitas.\n  const headerToSet = {\n    \"X-Skip-Sign\": \"true\",\n  };\n\n  // Llama a la API para establecer el encabezado.\n  Office.context.mailbox.item.internetHeaders.setAsync(headerToSet, (asyncResult) => {\n    if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {\n      console.log(\"Cabecera 'X-Skip-Sign' añadida correctamente.\");\n\n      // Muestra una notificación al usuario para confirmar la acción.\n      const notification = {\n        type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n        message: \"Este correo no se firmará.\",\n        icon: \"Icon.16x16\", // Icono definido en manifest.xml\n        persistent: false,\n      };\n      Office.context.mailbox.item.notificationMessages.replaceAsync(\n        \"skipSignNotification\",\n        notification\n      );\n    } else {\n      console.error(\"Error al añadir la cabecera: \" + JSON.stringify(asyncResult.error));\n    }\n\n    // ¡Importante! Indica a Outlook que la función ha terminado.\n    event.completed();\n  });\n}\n\n// Asocia la función con el nombre esperado por el manifest.xml.\nOffice.actions.associate(\"addCustomHeaders\", addCustomHeaders);\n"],"names":["Office","onReady","actions","associate","event","context","mailbox","item","internetHeaders","setAsync","asyncResult","status","AsyncResultStatus","Succeeded","console","log","notification","type","MailboxEnums","ItemNotificationMessageType","InformationalMessage","message","icon","persistent","notificationMessages","replaceAsync","error","JSON","stringify","completed"],"sourceRoot":""}